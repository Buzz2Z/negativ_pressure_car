C251 COMPILER V5.60.0,  park                                                               07/05/23  13:57:10  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE park
OBJECT MODULE PLACED IN .\Out_File\park.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\park.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Librar
                    -ies\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DE
                    -BUG PRINT(.\Out_File\park.lst) TABS(2) OBJECT(.\Out_File\park.obj) 

stmt  level    source

    1          /**
    2            ******************************************************************************
    3            * @author  Pump_Li
    4            * @version V1.0.0
    5            * @date    2023.5.4
    6            * @brief   出入库，干簧管检测
    7            ******************************************************************************
    8            * @attention
    9            * 
   10            ******************************************************************************
   11            */
   12           /* Includes ------------------------------------------------------------------*/
   13           #include "headfile.h"
   14          /* Private Define ------------------------------------------------------------*/
   15          int8   flag_start           = 0;    //出库完成标志位
   16          int8   flag_open_reed       = 0;    //打开干簧管
   17          int8   reed_state           = 0;    //干簧管状态
   18          int8   flag_end             = 0;    //开始停车标志位
   19          uint16 T_outku              = 0;    //出库直走和打角定时
   20          uint16 T_inku               = 0;    //入库停车和打角定时
   21          uint16 Open_pack_time = 0;   //打开干簧管定时
   22          uint16 Stop_time = 0;        //停车定时
   23          uint8 stop_flag_IN = 0;  //停车标志位
   24           /* Functions -----------------------------------------------------------------*/
   25          /**
   26            * @brief  出库函数
   27            * @param  type-----1为左出库，2为右出库
   28            * @retval None
   29            */
   30          void Handle_Barn_Out(uint8 type)
   31          {//1为左出库，2为右出库
   32   1          if(type ==1)
   33   1          {
   34   2           if(!flag_start)
   35   2           {
   36   3            if(T_outku < T_OUT_PARK1)
   37   3            {
   38   4            Moto_L(2000);
   39   4            Moto_R(2000);
   40   4            }
   41   3             if (T_outku >= T_OUT_PARK1) 
   42   3             {
   43   4            Moto_L(1000);
   44   4            Moto_R(3000);
   45   4             }
   46   3             if(T_outku > T_OUT_PARK2)
   47   3             {
   48   4                flag_start = 1;
   49   4                //T_outku=0;
   50   4             }    
   51   3            } 
   52   2          }
   53   1          if(type ==2)
   54   1          {
   55   2            if(!flag_start)
   56   2            {
   57   3            if(T_outku < T_OUT_PARK1)
C251 COMPILER V5.60.0,  park                                                               07/05/23  13:57:10  PAGE 2   

   58   3            {
   59   4      //     Moto_L(2000);
   60   4      //     Moto_R(2000);
   61   4            }
   62   3             if (T_outku >= T_OUT_PARK1) 
   63   3             {
   64   4               
   65   4      //     Moto_L(2000);
   66   4      //     Moto_R(2000);
   67   4             }
   68   3             if(T_outku > T_OUT_PARK2)
   69   3             {
   70   4                flag_start = 1;
   71   4                //T_outku=0;
   72   4             }                              
   73   3            }
   74   2          }
   75   1      }
   76          /**
   77            * @brief  干簧管检测停车
   78            * @param  None
   79            * @retval 干簧管使用方法就和按键类似，通过读取IO口电平即可
   80            */
   81          void HALL_Detect(void)
   82          {
   83   1        if(flag_start)//开始时不开启干簧管检测，防止出库时误测
   84   1        {
   85   2          //走过一段距离后开启干簧管检测
   86   2          if(T_outku > START_T)
   87   2          {
   88   3            flag_open_reed = 1;
   89   3            T_outku=0;
   90   3          }
   91   2        }
   92   1        if(flag_open_reed)             //干簧管检测标志位成立后才开始检测
   93   1        {
   94   2          reed_state = Reed_Switch_HALL_Pin;//干簧管状态
   95   2          if(reed_state==1)
   96   2          {
   97   3            flag_end = 1;              //识别到停车标志位开启
   98   3          }
   99   2         }
  100   1      }
  101          /**
  102            * @brief  入库函数
  103            * @param  None
  104            * @retval None
  105            */
  106          void Handle_Barn_In(uint8 type)
  107          {
  108   1        if(type ==1)
  109   1        {
  110   2          if(flag_end==1)
  111   2          {
  112   3              stop_flag_IN = 1;
  113   3              motor_speed(0);
  114   3             if (T_inku >= T_IN_PARK1) 
  115   3             {
  116   4               stop_flag = 0;
  117   4              Moto_L(-2000);
  118   4              Moto_R(-2000);
  119   4             }
  120   3              if(T_inku >= T_IN_PARK2)
  121   3             {
  122   4              Moto_L(-1000);
  123   4              Moto_R(-3000);
C251 COMPILER V5.60.0,  park                                                               07/05/23  13:57:10  PAGE 3   

  124   4             }
  125   3              if(T_inku >= T_IN_PARK3)
  126   3             {
  127   4              stop_flag_IN = 1;
  128   4              Moto_L(0);
  129   4              Moto_R(0);
  130   4              while(1);
  131   4             }
  132   3             
  133   3          }
  134   2       }
  135   1        if(type ==2)
  136   1        {
  137   2          if(flag_end==1)
  138   2          {
  139   3              stop_flag_IN = 1;
  140   3              motor_speed(0);
  141   3             if (T_inku >= T_IN_PARK1) 
  142   3             {
  143   4              stop_flag_IN = 0;
  144   4              Moto_L(-2000);
  145   4              Moto_R(-2000);
  146   4             }
  147   3              if(T_inku >= T_IN_PARK2)
  148   3             {
  149   4              Moto_L(-3000);
  150   4              Moto_R(-1000);
  151   4             }
  152   3              if(T_inku >= T_IN_PARK3)
  153   3             {
  154   4              stop_flag_IN = 1;
  155   4              Moto_L(0);
  156   4              Moto_R(0);
  157   4              while(1);
  158   4             }
  159   3          }
  160   2       }
  161   1        
  162   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       380     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        13     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        49     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
