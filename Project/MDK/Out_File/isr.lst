C251 COMPILER V5.60.0,  isr                                                                08/05/23  14:39:54  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\isr.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Lib
                    -raries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src)
                    - DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj) 

stmt  level    source

    1          ///******************************************************************************************************
             -***************
    2          // * COPYRIGHT NOTICE
    3          // * Copyright (c) 2020,逐飞科技
    4          // * All rights reserved.
    5          // * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6          // *
    7          // * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8          // * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9          // *
   10          // * @file          isr
   11          // * @company       成都逐飞科技有限公司
   12          // * @author        逐飞科技(QQ790875685)
   13          // * @version       查看doc内version文件 版本说明
   14          // * @Software      MDK FOR C251 V5.60
   15          // * @Target core   STC32G12K128
   16          // * @Taobao        https://seekfree.taobao.com/
   17          // * @date          2020-4-14
   18          // ******************************************************************************************************
             -**************/
   19          //#include "headfile.h"
   20          #include "isr.h"
   21           int16 a;
   22          int16 time_t;
   23          //UART1中断
   24          void UART1_Isr() interrupt 4
   25          {
   26   1          uint8 res;
   27   1        static uint8 dwon_count;
   28   1          if(UART1_GET_TX_FLAG)
   29   1          {
   30   2              UART1_CLEAR_TX_FLAG;
   31   2              busy[1] = 0;
   32   2          }
   33   1          if(UART1_GET_RX_FLAG)
   34   1          {
   35   2              UART1_CLEAR_RX_FLAG;
   36   2              res = SBUF;
   37   2              //程序自动下载
   38   2              if(res == 0x7F)
   39   2              {
   40   3                  if(dwon_count++ > 20)
   41   3                      IAP_CONTR = 0x60;
   42   3              }
   43   2              else
   44   2              {
   45   3                  dwon_count = 0;
   46   3              }
   47   2          }
   48   1      }
   49          
   50          //UART2中断
   51          void UART2_Isr() interrupt 8
   52          {
   53   1          if(UART2_GET_TX_FLAG)
   54   1        {
   55   2              UART2_CLEAR_TX_FLAG;
C251 COMPILER V5.60.0,  isr                                                                08/05/23  14:39:54  PAGE 2   

   56   2          busy[2] = 0;
   57   2        }
   58   1          if(UART2_GET_RX_FLAG)
   59   1        {
   60   2              UART2_CLEAR_RX_FLAG;
   61   2          //接收数据寄存器为：S2BUF
   62   2      
   63   2        }
   64   1      }
   65          
   66          
   67          //UART3中断
   68          void UART3_Isr() interrupt 17
   69          {
   70   1          if(UART3_GET_TX_FLAG)
   71   1        {
   72   2              UART3_CLEAR_TX_FLAG;
   73   2          busy[3] = 0;
   74   2        }
   75   1          if(UART3_GET_RX_FLAG)
   76   1        {
   77   2              UART3_CLEAR_RX_FLAG;
   78   2          //接收数据寄存器为：S3BUF
   79   2      
   80   2        }
   81   1      }
   82          
   83          
   84          //UART4中断
   85          void UART4_Isr() interrupt 18
   86          {
   87   1          if(UART4_GET_TX_FLAG)
   88   1        {
   89   2              UART4_CLEAR_TX_FLAG;
   90   2          busy[4] = 0;
   91   2        }
   92   1          if(UART4_GET_RX_FLAG)
   93   1        {
   94   2              UART4_CLEAR_RX_FLAG;
   95   2      
   96   2          //接收数据寄存器为：S4BUF;
   97   2          if(wireless_type == WIRELESS_SI24R1)
   98   2              {
   99   3                  wireless_uart_callback();           //无线转串口回调函数
  100   3              }
  101   2              else if(wireless_type == WIRELESS_CH9141)
  102   2              {
  103   3                  bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
  104   3              }
  105   2              else if(wireless_type == WIRELESS_CH573)
  106   2              {
  107   3                  wireless_ch573_callback();          //CH573无线模块回调函数
  108   3              }
  109   2        }
  110   1      }
  111          
  112          #define LED P52
  113          void INT0_Isr() interrupt 0
  114          {
  115   1        LED = 0;  //点亮LED
  116   1      }
  117          void INT1_Isr() interrupt 2
  118          {
  119   1      
  120   1      }
  121          void INT2_Isr() interrupt 10
C251 COMPILER V5.60.0,  isr                                                                08/05/23  14:39:54  PAGE 3   

  122          {
  123   1        INT2_CLEAR_FLAG;  //清除中断标志
  124   1      }
  125          void INT3_Isr() interrupt 11
  126          {
  127   1        INT3_CLEAR_FLAG;  //清除中断标志
  128   1      }
  129          
  130          void INT4_Isr() interrupt 16
  131          {
  132   1        INT4_CLEAR_FLAG;  //清除中断标志
  133   1      }
  134          
  135          void TM0_Isr() interrupt 1
  136          {
  137   1      
  138   1      }
  139          uint8 count1 = 0;
  140          uint8 count2 = 0;
  141          uint8 count3 = 0;
  142          
  143          void TM1_Isr() interrupt 3
  144          {
  145   1           if(count2++ >= 2)
  146   1           {
  147   2             count2 = 0;
  148   2            imu660ra_get_gyro();
  149   2            dl1a_get_distance();
  150   2           }
  151   1      
  152   1           if(count1++ >= 5)
  153   1          {
  154   2              count1 = 0;
  155   2              LED = !LED;
  156   2            Get_Encoder();
  157   2            ADC_Date_Fitier();
  158   2            //motor_speed(1);
  159   2            //printf("g:%d\r\n",1);
  160   2      //      set_speed_target(0,1);
  161   2      //      DifferControl();
  162   2            //left_motor_pid(1);
  163   2            //right_motor_pid(1);
  164   2           if((Left_Xie_Adc+Right_Xie_Adc)>=20&&flag_start==1&&flag_end==0)
  165   2            {
  166   3            fan_start();
  167   3            element_annulus_detect();   //环岛元素判断
  168   3            obstacle_avoidance();   //路障判断
  169   3            set_speed_target(0,0.5);
  170   3            //  motor_speed(1);
  171   3            DifferControl();
  172   3            }
  173   2            else motor_speed(0);
  174   2          }
  175   1           
  176   1           if(count3++ >= 2)
  177   1           {
  178   2             count3 = 0;
  179   2             if(!flag_start)T_outku=T_outku+1;
  180   2             if(flag_end==1)T_inku=T_inku+1;
  181   2           }
  182   1      
  183   1      }
  184          void TM2_Isr() interrupt 12
  185          {
  186   1        TIM2_CLEAR_FLAG;  //清除中断标志
  187   1        
C251 COMPILER V5.60.0,  isr                                                                08/05/23  14:39:54  PAGE 4   

  188   1      }
  189          void TM3_Isr() interrupt 19
  190          {
  191   1        TIM3_CLEAR_FLAG; //清除中断标志
  192   1        
  193   1      }
  194          
  195          void TM4_Isr() interrupt 20
  196          {
  197   1        TIM4_CLEAR_FLAG; //清除中断标志
  198   1      
  199   1      }
  200          
  201          //void  INT0_Isr()  interrupt 0;
  202          //void  TM0_Isr()   interrupt 1;
  203          //void  INT1_Isr()  interrupt 2;
  204          //void  TM1_Isr()   interrupt 3;
  205          //void  UART1_Isr() interrupt 4;
  206          //void  ADC_Isr()   interrupt 5;
  207          //void  LVD_Isr()   interrupt 6;
  208          //void  PCA_Isr()   interrupt 7;
  209          //void  UART2_Isr() interrupt 8;
  210          //void  SPI_Isr()   interrupt 9;
  211          //void  INT2_Isr()  interrupt 10;
  212          //void  INT3_Isr()  interrupt 11;
  213          //void  TM2_Isr()   interrupt 12;
  214          //void  INT4_Isr()  interrupt 16;
  215          //void  UART3_Isr() interrupt 17;
  216          //void  UART4_Isr() interrupt 18;
  217          //void  TM3_Isr()   interrupt 19;
  218          //void  TM4_Isr()   interrupt 20;
  219          //void  CMP_Isr()   interrupt 21;
  220          //void  I2C_Isr()   interrupt 24;
  221          //void  USB_Isr()   interrupt 25;
  222          //void  PWM1_Isr()  interrupt 26;
  223          //void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       552     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        15     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
